Point precision:

<input type="text" id="point_precision_id" name="precision" onchange="onPrecisionChange()" value="{{ gradeable.getPrecision() }}" class="ignore" />
<br/>

<div class="electronic_file ignore" id="gradeable_rubric">
    Are student submissions/uploads a single file PDF with a fixed/prescribed format?<br>
    And do you expect each specific problem/item/component to appear on a specific page number of the PDF document?

    <fieldset>
        <input type="radio" id="yes_pdf_page" name="pdf_page" value="true" onchange="updatePdfPageSettings()"
                {{ is_pdf_page ? 'checked' : '' }} /> Yes
        <input type="radio" id="no_pdf_page" name="pdf_page" value="false" onchange="updatePdfPageSettings()"
                {{ not is_pdf_page ? 'checked' : '' }} /> No

        <br />

        <div id="pdf_page">
            <br />
            Who will assign page numbers to problems/item/components?<br>
            <input type="radio" id="no_pdf_page_student" name="pdf_page_student" value="false" onchange="updatePdfPageSettings()"
                    {{ not is_pdf_page_student ? 'checked' : '' }} /> Instructor (specify the starting page number for each problem/item/component below)<br>
            <input type="radio" id="yes_pdf_page_student" name="pdf_page_student" value="true" onchange="updatePdfPageSettings()"
                    {{ is_pdf_page_student ? 'checked' : '' }} /> Student (student will be asked for page numbers at submission time)
        </div>
    </fieldset>
    <div>
        <div id="rubric-total-container">
        </div>
        <div id="grading-box">
        </div>
    </div>
</div>
<div>
    <a href="{{ export_components_url }}" class="btn btn-default">Export Components</a>
    <label for="import-components-file" class="btn btn-default">Import Components</label>
    <input id="import-components-file" type="file" class="btn ignore" onchange="makeSubmission();" style="display: none;"/>
</div>

<script type="text/javascript">

    function handleUploadGradeableComponents(csrf_token, gradeable_id) {
        let submit_url = buildUrl({'component': 'admin', 'page': 'admin_gradeable', 'action': 'import_components', 'gradeable_id': gradeable_id});
        let formData = new FormData();

        formData.append('csrf_token', csrf_token);
        let files = $('#import-components-file')[0].files;

        if (files.length === 0) {
            return;
        }

        // Files selected
        for (let i = 0; i < files.length; i++) {
            formData.append('files' + i, files[i], files[i].name);
        }

        $.getJSON({
            url: submit_url,
            data: formData,
            processData: false,
            contentType: false,
            type: 'POST',
            success: function (response) {
                if (response.status !== 'success') {
                    console.error('Something went wrong importing components: ' + response.message);
                    reject(new Error(response.message));
                } else {
                    location.reload();
                }
            },
            error: function (e) {
                alert("Error parsing response from server. Please copy the contents of your Javascript Console and " +
                    "send it to an administrator, as well as what you were doing and what files you were uploading. - [handleUploadGradeableComponents]");
            }
        });
    }
    function makeSubmission() {
        handleUploadGradeableComponents("{{ core.getCsrfToken() }}", "{{ gradeable.getId() }}");
    }

    $(document).ready(function() {
        loadTemplates().then(function() {
            reloadInstructorEditRubric($('#g_id').val());
        });
    });
</script>